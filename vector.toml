# Set global options
data_dir = "/var/lib/vector"

# https://vector.dev/docs/reference/api/
[api]
enabled = true
address = "0.0.0.0:8686" # optional. Change IP/port if required

# https://vector.dev/docs/reference/configuration/sources/socket/
[sources.udp_input]
type = "socket"
address = "0.0.0.0:5958"
mode = "udp"
# path = "/udp-log"
decoding.codec = "bytes"
# vector   | 2023-08-27T05:17:03.655425Z ERROR vector::cli: Configuration error.
#  error=unknown field `path`, expected one of
# `address`, `max_length`, `host_key`, `port_key`, `receive_buffer_bytes`, `framing`, `decoding`, `log_namespace`

# https://vector.dev/docs/reference/configuration/transforms/remap/
[transforms.json_parser]
type = "remap"
inputs = ["udp_input"]
drop_on_error = false
source = '''
parsed, err = parse_json(.message)
if err == null {
    . |= object!(parsed)
} else {
    log("Failed to parse json from udp_input", level: "error")
}
'''

# grok_parser transform is rewoved

# https://vector.dev/docs/reference/configuration/sinks/console/
[sinks.console_output]
type = "console"
inputs = [ "json_parser" ]
encoding.codec = "logfmt"

# https://vector.dev/docs/reference/configuration/sinks/elasticsearch/
[sinks.elastic_output]
type = "elasticsearch"
inputs = ["json_parser"]
healthcheck = false
api_version = "v7"
endpoints = ["http://elasticsearch:9200"]
auth.user = "${VECTOR_ELASTIC_USERNAME}"
auth.password = "${VECTOR_ELASTIC_PASSWORD}"
auth.strategy = "basic"
mode = "data_stream"
data_stream.dataset = "{{ tags[0] }}"
data_stream.namespace = "{{ type }}"